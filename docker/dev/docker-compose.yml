name: dou-jobs-dev

services:
  postgres:
    image: postgres:16-alpine
    container_name: dou-jobs-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dou_jobs
    ports:
      - "5432:5432"
    volumes:
      - ../../db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dou-jobs-network

  bot:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile.bot
    container_name: dou-jobs-bot
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dou_jobs?schema=public"
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      API_PORT: 3000
      WEBAPP_URL: ${WEBAPP_URL:-http://localhost:3000}
      NODE_ENV: development
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dou-jobs-network

  category-scraper:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile.scraper
    container_name: dou-jobs-category-scraper
    restart: "no"
    working_dir: /app/scraper
    command: npm run task:categories
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dou_jobs?schema=public"
      NODE_ENV: development
    volumes:
      - ../../scraper/src:/app/scraper/src
      - ../../packages/database/prisma:/app/packages/database/prisma
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dou-jobs-network
    profiles:
      - cron

  location-scraper:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile.scraper
    container_name: dou-jobs-location-scraper
    restart: "no"
    working_dir: /app/scraper
    command: npm run task:locations
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dou_jobs?schema=public"
      NODE_ENV: development
    volumes:
      - ../../scraper/src:/app/scraper/src
      - ../../packages/database/prisma:/app/packages/database/prisma
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dou-jobs-network
    profiles:
      - cron

  jobs-scraper:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile.scraper
    container_name: dou-jobs-jobs-scraper
    restart: "no"
    working_dir: /app/scraper
    command: npm run task:jobs
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dou_jobs?schema=public"
      NODE_ENV: development
    volumes:
      - ../../scraper/src:/app/scraper/src
      - ../../packages/database/prisma:/app/packages/database/prisma
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dou-jobs-network
    profiles:
      - cron

  notification-sender:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile.bot
    container_name: dou-jobs-notification-sender
    restart: "no"
    working_dir: /app/bot
    command: npm run task:notify
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/dou_jobs?schema=public"
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dou-jobs-network
    profiles:
      - cron

networks:
  dou-jobs-network:
    name: dou-jobs-dev-network
    driver: bridge
