# Stage 1: Build dependencies
FROM node:20-alpine AS builder-deps

# Install dependencies for Prisma
RUN apk add --no-cache openssl

WORKDIR /app

# Copy root package.json and package-lock.json
COPY package.json package-lock.json ./
COPY packages/database/package.json ./packages/database/
COPY packages/logger/package.json ./packages/logger/
COPY scraper/package.json ./scraper/

# Install ALL dependencies (including dev) for building
RUN npm ci

# Copy database package and generate Prisma client
COPY packages/database/ ./packages/database/
RUN npm run db:generate

# Build database package
RUN npm run -w @repo/database build

# Copy and build shared logger package
COPY packages/logger/ ./packages/logger/
RUN npm run -w @repo/logger build

# Stage 2: Build scraper TypeScript
FROM node:20-alpine AS builder

WORKDIR /app

# Copy dependencies from previous stage
COPY --from=builder-deps /app/node_modules ./node_modules
COPY --from=builder-deps /app/packages ./packages
COPY --from=builder-deps /app/package.json /app/package-lock.json ./

# Copy scraper source
COPY scraper/package.json ./scraper/
COPY scraper/tsconfig.json ./scraper/
COPY scraper/src ./scraper/src

# Build scraper
WORKDIR /app/scraper
RUN npm run build

# Stage 3: Production runtime
FROM node:20-alpine

# Install dependencies for Prisma
RUN apk add --no-cache openssl

WORKDIR /app

# Copy root and scraper package files
COPY package.json package-lock.json ./
COPY scraper/package.json ./scraper/
COPY packages/database/package.json ./packages/database/
COPY packages/logger/package.json ./packages/logger/

# Install ALL dependencies first (including devDependencies for prisma CLI)
RUN npm ci

# Copy built packages from builder stage (includes compiled code)
COPY --from=builder-deps /app/packages/database/dist ./packages/database/dist
COPY --from=builder-deps /app/packages/logger/dist ./packages/logger/dist

# Copy Prisma schema (needed for generate)
COPY packages/database/prisma ./packages/database/prisma

# Generate Prisma Client (this creates files in node_modules/.prisma/client)
RUN npm run -w @repo/database generate

# Remove devDependencies to reduce image size (Prisma Client is already generated)
RUN npm prune --production

# Copy built scraper from builder stage
COPY --from=builder /app/scraper/dist ./scraper/dist

# Set working directory to scraper
WORKDIR /app/scraper

# Run in production mode
CMD ["npm", "start"]

